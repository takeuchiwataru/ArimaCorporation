//=============================================================================
//
// 入力処理 [light.cpp]
// Author : 有馬武志
//
//=============================================================================
#include "light.h"
#include "manager.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数
//*****************************************************************************

//===============================================================================
//　デフォルトコンストラクタ
//===============================================================================
CLight::CLight()
{
	
}
//===============================================================================
//　デストラクタ
//===============================================================================
CLight::~CLight()
{

}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CLight::Init(HINSTANCE hInstance, HWND hWnd)
{
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();
	D3DXVECTOR3 vecDir[MAX_LIGHT];

	//// ライトの方向の設定
	vecDir[0] = D3DXVECTOR3(0.22f, -0.87f, 0.44f);
	vecDir[1] = D3DXVECTOR3(-0.18f, -0.88f, -0.44f);
	vecDir[2] = D3DXVECTOR3(0.89f, -0.11f, 0.44f);

	/*vecDir[0] = D3DXVECTOR3(0.0f, -1.0f, 0.0f);
	vecDir[1] = D3DXVECTOR3(-0.18f, -0.88f, -0.44f);
	vecDir[2] = D3DXVECTOR3(0.89f, -0.11f, 0.44f);*/

	// ライトの拡散光を設定1.0f
	/*m_Light[0].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	m_Light[1].Diffuse = D3DXCOLOR(0.65f, 0.65f, 0.65f, 1.0f);
	m_Light[2].Diffuse = D3DXCOLOR(0.15f, 0.15f, 0.15f, 1.0f);*/

	//// ライトの拡散光を設定1.0f デバック用
	m_Light[0].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	m_Light[1].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	m_Light[2].Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

	// ライトをクリアする
	ZeroMemory(&m_Light, sizeof(D3DLIGHT9));

	for (int nCount = 0; nCount < MAX_LIGHT; nCount++)
	{
		/*typedef enum _D3DLIGHTTYPE 
		{
			D3DLIGHT_POINT = 1,
			D3DLIGHT_SPOT = 2,
			D3DLIGHT_DIRECTIONAL = 3,
			D3DLIGHT_FORCE_DWORD = 0x7fffffff
		} D3DLIGHTTYPE;*/

		//if (nCount == 0)
		{
			// ライトの種類を設定
			//m_Light[nCount].Type = D3DLIGHT_SPOT;
		}
		//else
		{
			m_Light[nCount].Type = D3DLIGHT_DIRECTIONAL;
		}

		//正規化する
		D3DXVec3Normalize(&vecDir[nCount], &vecDir[nCount]);
		m_Light[nCount].Direction = vecDir[nCount];

		// ライトを設定する ↓これを入れないと、ライトが全部使えない
		pDevice->SetLight(nCount, &m_Light[nCount]);

		// ライトを有効にする
		pDevice->LightEnable(nCount, TRUE);
	}

	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CLight::Uninit(void)
{
	
}
//=============================================================================
// 更新処理
//=============================================================================
void CLight::Update(void)
{

}